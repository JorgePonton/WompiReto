# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:
  - script: chmod +x ./gradlew

  - script: |
    # Verify the presence of the MyChromeDriver.java file
    ls
    CHROMEDRIVER_URL="https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
    wget $CHROMEDRIVER_URL -O chromedriver.zip
    unzip chromedriver.zip
    echo "webdriver.chrome.driver=$(Agent.BuildDirectory)/s/chromedriver" > $(Agent.TempDirectory)/chromedriver-env
    displayName: 'Download ChromeDriver'

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'test'  # Change 'build' to 'test' to execute the tests
      publishJUnitResults: false
      codeCoverageClassFilesDirectories: 'build/classes/main/'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '2.6.1'
      spotBugsAnalysis: false

  - script: |
    # Set the system property to use the downloaded ChromeDriver
    System.setProperty("webdriver.chrome.driver", "$(Agent.TempDirectory)/chromedriver");
  displayName: 'Set Chrome Driver Property'

  - task: VSTest@2
    inputs:
      testAssemblyPath: '**\*.dll'
      publishRunnings: true
      searchFolder: '$(Agent.BuildDirectory)'
