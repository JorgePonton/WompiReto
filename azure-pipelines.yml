# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest



steps:



- script: |
      # Descargar ChromeDriver
      CHROMEDRIVER_URL="https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
      wget $CHROMEDRIVER_URL -O chromedriver.zip
      unzip chromedriver.zip
      echo "export webdriver.chrome.driver=$(Agent.BuildDirectory)/s/chromedriver" >> $(Agent.TempDirectory)/chromedriver-env
      displayName: 'Download and configure ChromeDriver'

- script: 
   
      source $(Agent.TempDirectory)/chromedriver-env
    public class MyChromeDriver {
      private static WebDriver chromeDriver;


      public static MyChromeDriver chromeHisBrowserWeb() {
        ChromeOptions options = new ChromeOptions();

        options.addArguments("--incognito");

        options.addArguments("--start-maximized");

        options.addArguments("--ignore-certificate-errors");

        options.addArguments("--disable-infobars");

        options.addArguments("--remote-allow-origins=*");

        chromeDriver = new ChromeDriver(options);
        return new MyChromeDriver();
    }
      public WebDriver onTheUrl(String url){
        chromeDriver.get(url);
        return chromeDriver;
                                            }
    }

  
      java -jar YourTestProject.jar
  displayName: 'Run Tests'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
 

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: false
    codeCoverageClassFilesDirectories: 'build/classes/main/'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '2.6.1'
    spotBugsAnalysis: false